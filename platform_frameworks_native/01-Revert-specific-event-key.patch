From 530eff407f88cbdb3481170e0c1f193ac0dda943 Mon Sep 17 00:00:00 2001
From: ChonDoit <thphantomblog@gmail.com>
Date: Sat, 18 Jun 2022 00:21:29 +0000
Subject: [PATCH] Revert "InputDispatcher: allow to intercept a specific event
 key"

This reverts commit 070d2724a2ec5c33f56fd22fc4bf2894c1b93060.
---
 services/inputflinger/dispatcher/Android.bp          | 1 -
 services/inputflinger/dispatcher/InputDispatcher.cpp | 8 --------
 2 files changed, 9 deletions(-)

diff --git a/services/inputflinger/dispatcher/Android.bp b/services/inputflinger/dispatcher/Android.bp
index 7234ecdbe2..171f2b5ce8 100644
--- a/services/inputflinger/dispatcher/Android.bp
+++ b/services/inputflinger/dispatcher/Android.bp
@@ -83,7 +83,6 @@ cc_library_static {
     defaults: [
         "inputflinger_defaults",
         "libinputdispatcher_defaults",
-        "inputdispatcher_skip_event_key_defaults",
     ],
     shared_libs: [
         // This should consist only of dependencies from inputflinger. Other dependencies should be
diff --git a/services/inputflinger/dispatcher/InputDispatcher.cpp b/services/inputflinger/dispatcher/InputDispatcher.cpp
index d236a20fc9..464236dfb3 100644
--- a/services/inputflinger/dispatcher/InputDispatcher.cpp
+++ b/services/inputflinger/dispatcher/InputDispatcher.cpp
@@ -1449,14 +1449,6 @@ bool InputDispatcher::dispatchKeyLocked(nsecs_t currentTime, std::shared_ptr<Key
     // Give the policy a chance to intercept the key.
     if (entry->interceptKeyResult == KeyEntry::INTERCEPT_KEY_RESULT_UNKNOWN) {
         if (entry->policyFlags & POLICY_FLAG_PASS_TO_USER) {
-            if (INPUTDISPATCHER_SKIP_EVENT_KEY != 0) {
-                if(entry->keyCode == 0 && entry->scanCode == INPUTDISPATCHER_SKIP_EVENT_KEY) {
-                    entry->interceptKeyResult = KeyEntry::INTERCEPT_KEY_RESULT_SKIP;
-                    *dropReason = DropReason::POLICY;
-                    ALOGI("Intercepted the key %i", INPUTDISPATCHER_SKIP_EVENT_KEY);
-                    return true;
-                }
-            }
             std::unique_ptr<CommandEntry> commandEntry = std::make_unique<CommandEntry>(
                     &InputDispatcher::doInterceptKeyBeforeDispatchingLockedInterruptible);
             sp<IBinder> focusedWindowToken =
-- 
2.17.1

